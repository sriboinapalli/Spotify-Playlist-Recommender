{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0ngwQpVCEUhKingLoOpd1I\n",
      "48\n",
      "7zGVMRHuPm0JudlT5kgWog\n",
      "35\n",
      "2o081YaHjPiDIgOtIyw8Hp\n",
      "1qbUsgOaOMDB7UYNQKFBSZ\n",
      "7BP5onQdR6vqqa78qT9AgV\n",
      "100\n",
      "2NebeZvLy2MsWKiAFk6R7o\n",
      "89\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "from app2 import *"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Hindi.json', 'Peak Trap.json', 'Frictionless.json', \"I'm a god.json\"]\n"
     ]
    }
   ],
   "source": [
    "print(playlist_namelist)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# def track_lister(list1):\n",
    "#     list2 = []\n",
    "#     track_list = []\n",
    "#     for i in range(len(list1)):\n",
    "#         list2.append(list1[i][:-5])\n",
    "#     for item in list2:\n",
    "#         if \"'\" in item:\n",
    "#             item = item.replace(\"'\",\"\")\n",
    "#         if \" \" in item:\n",
    "#             item = item.replace(\" \",\"_\")\n",
    "#         item += \"_tracklist\"\n",
    "#         track_list.append(item)\n",
    "#     return track_list    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'track_lister' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-4-b6ce4ff84a29>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrack_lister\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mplaylist_namelist\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m: name 'track_lister' is not defined"
     ]
    }
   ],
   "source": [
    "# print(track_lister(playlist_namelist))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>acousticness</th>\n",
       "      <th>danceability</th>\n",
       "      <th>duration_ms</th>\n",
       "      <th>energy</th>\n",
       "      <th>instrumentalness</th>\n",
       "      <th>key</th>\n",
       "      <th>liveness</th>\n",
       "      <th>loudness</th>\n",
       "      <th>mode</th>\n",
       "      <th>speechiness</th>\n",
       "      <th>tempo</th>\n",
       "      <th>time_signature</th>\n",
       "      <th>valence</th>\n",
       "      <th>playlist</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>7ltsfuHdqTZ5LwPpDy1q0v</th>\n",
       "      <td>0.1860</td>\n",
       "      <td>0.786</td>\n",
       "      <td>416613</td>\n",
       "      <td>0.579</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2</td>\n",
       "      <td>0.1180</td>\n",
       "      <td>-14.913</td>\n",
       "      <td>1</td>\n",
       "      <td>0.1420</td>\n",
       "      <td>90.012</td>\n",
       "      <td>4</td>\n",
       "      <td>0.481</td>\n",
       "      <td>Hindi</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0OXQa6GOzxeYWFopEmASw9</th>\n",
       "      <td>0.0493</td>\n",
       "      <td>0.805</td>\n",
       "      <td>425413</td>\n",
       "      <td>0.670</td>\n",
       "      <td>0.000050</td>\n",
       "      <td>2</td>\n",
       "      <td>0.2030</td>\n",
       "      <td>-13.187</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0601</td>\n",
       "      <td>122.992</td>\n",
       "      <td>4</td>\n",
       "      <td>0.916</td>\n",
       "      <td>Hindi</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6B58TJqjGLQuuZBhQ3UnEA</th>\n",
       "      <td>0.1200</td>\n",
       "      <td>0.767</td>\n",
       "      <td>309107</td>\n",
       "      <td>0.503</td>\n",
       "      <td>0.000096</td>\n",
       "      <td>9</td>\n",
       "      <td>0.1580</td>\n",
       "      <td>-13.424</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0828</td>\n",
       "      <td>141.996</td>\n",
       "      <td>4</td>\n",
       "      <td>0.483</td>\n",
       "      <td>Hindi</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0IYpKZhCeoXB85BslBg3q5</th>\n",
       "      <td>0.4190</td>\n",
       "      <td>0.646</td>\n",
       "      <td>327227</td>\n",
       "      <td>0.908</td>\n",
       "      <td>0.000002</td>\n",
       "      <td>11</td>\n",
       "      <td>0.3810</td>\n",
       "      <td>-4.680</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0988</td>\n",
       "      <td>104.238</td>\n",
       "      <td>4</td>\n",
       "      <td>0.881</td>\n",
       "      <td>Hindi</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7CcAKQatXMmlr7wi6BaQsI</th>\n",
       "      <td>0.0815</td>\n",
       "      <td>0.493</td>\n",
       "      <td>297927</td>\n",
       "      <td>0.947</td>\n",
       "      <td>0.009370</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0552</td>\n",
       "      <td>-4.188</td>\n",
       "      <td>0</td>\n",
       "      <td>0.2060</td>\n",
       "      <td>127.986</td>\n",
       "      <td>4</td>\n",
       "      <td>0.568</td>\n",
       "      <td>Hindi</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        acousticness  danceability  duration_ms  energy  \\\n",
       "id                                                                        \n",
       "7ltsfuHdqTZ5LwPpDy1q0v        0.1860         0.786       416613   0.579   \n",
       "0OXQa6GOzxeYWFopEmASw9        0.0493         0.805       425413   0.670   \n",
       "6B58TJqjGLQuuZBhQ3UnEA        0.1200         0.767       309107   0.503   \n",
       "0IYpKZhCeoXB85BslBg3q5        0.4190         0.646       327227   0.908   \n",
       "7CcAKQatXMmlr7wi6BaQsI        0.0815         0.493       297927   0.947   \n",
       "\n",
       "                        instrumentalness  key  liveness  loudness  mode  \\\n",
       "id                                                                        \n",
       "7ltsfuHdqTZ5LwPpDy1q0v          0.000000    2    0.1180   -14.913     1   \n",
       "0OXQa6GOzxeYWFopEmASw9          0.000050    2    0.2030   -13.187     1   \n",
       "6B58TJqjGLQuuZBhQ3UnEA          0.000096    9    0.1580   -13.424     1   \n",
       "0IYpKZhCeoXB85BslBg3q5          0.000002   11    0.3810    -4.680     0   \n",
       "7CcAKQatXMmlr7wi6BaQsI          0.009370    1    0.0552    -4.188     0   \n",
       "\n",
       "                        speechiness    tempo  time_signature  valence playlist  \n",
       "id                                                                              \n",
       "7ltsfuHdqTZ5LwPpDy1q0v       0.1420   90.012               4    0.481    Hindi  \n",
       "0OXQa6GOzxeYWFopEmASw9       0.0601  122.992               4    0.916    Hindi  \n",
       "6B58TJqjGLQuuZBhQ3UnEA       0.0828  141.996               4    0.483    Hindi  \n",
       "0IYpKZhCeoXB85BslBg3q5       0.0988  104.238               4    0.881    Hindi  \n",
       "7CcAKQatXMmlr7wi6BaQsI       0.2060  127.986               4    0.568    Hindi  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "for i in range(len(playlist_namelist)):\n",
    "    tracklist = pd.read_json(playlist_namelist[i])\n",
    "    tracklist = tracklist.set_index(\"id\")\n",
    "    tracklist = tracklist.drop([\"analysis_url\",\"track_href\",\"uri\",\"type\"],1)\n",
    "    tracklist[\"playlist\"] = playlist_namelist[i][:-5]\n",
    "    if i == 0:\n",
    "        all_tracks = tracklist\n",
    "    else:\n",
    "        all_tracks = all_tracks.append(tracklist)\n",
    "all_tracks.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "for i in range(len(track_stuff_namelist)):\n",
    "    track_stuff = pd.read_json(track_stuff_namelist[i])\n",
    "    track_stuff = track_stuff.T\n",
    "    track_stuff = track_stuff.set_index(\"id\")\n",
    "    if i == 0:\n",
    "        all_tracks_2 = track_stuff\n",
    "    else:\n",
    "        all_tracks_2 = all_tracks_2.append(track_stuff)\n",
    "all_tracks[\"artist\"] = all_tracks_2[\"artist\"]\n",
    "all_tracks[\"popularity\"] = all_tracks_2[\"popularity\"]\n",
    "all_tracks[\"popularity\"] = pd.to_numeric(all_tracks[\"popularity\"])\n",
    "# all_tracks.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "46.285714285714285\n",
      "62.12\n",
      "63.10112359550562\n",
      "32.604166666666664\n",
      "count    35.000000\n",
      "mean     46.285714\n",
      "std      12.047874\n",
      "min      20.000000\n",
      "25%      40.000000\n",
      "50%      47.000000\n",
      "75%      52.500000\n",
      "max      72.000000\n",
      "Name: popularity, dtype: float64\n",
      "count    100.000000\n",
      "mean      62.120000\n",
      "std       10.553644\n",
      "min       22.000000\n",
      "25%       57.000000\n",
      "50%       62.000000\n",
      "75%       69.250000\n",
      "max       83.000000\n",
      "Name: popularity, dtype: float64\n",
      "count    89.000000\n",
      "mean     63.101124\n",
      "std      13.889208\n",
      "min      12.000000\n",
      "25%      59.000000\n",
      "50%      66.000000\n",
      "75%      71.000000\n",
      "max      86.000000\n",
      "Name: popularity, dtype: float64\n",
      "count    48.000000\n",
      "mean     32.604167\n",
      "std      12.215685\n",
      "min       0.000000\n",
      "25%      24.000000\n",
      "50%      33.500000\n",
      "75%      42.250000\n",
      "max      51.000000\n",
      "Name: popularity, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "peak_trap = all_tracks[all_tracks[\"playlist\"] == \"Peak Trap\"]\n",
    "frictionless = all_tracks[all_tracks[\"playlist\"] == \"Frictionless\"]\n",
    "im_a_god = all_tracks[all_tracks[\"playlist\"] == \"I'm a god\"]\n",
    "hindi = all_tracks[all_tracks[\"playlist\"] == \"Hindi\"]\n",
    "color = [\"#BAA7B0\",\"#FF9C6A\",\"#F26DF9\",\"#8E6C88\"]\n",
    "sns.set_style(\"white\")\n",
    "palette = sns.color_palette(color)\n",
    "sns.set_palette(palette)\n",
    "print(peak_trap['popularity'].mean())\n",
    "print(frictionless[\"popularity\"].mean())\n",
    "print(im_a_god['popularity'].mean())\n",
    "print(hindi['popularity'].mean())\n",
    "print(peak_trap['popularity'].describe())\n",
    "print(frictionless[\"popularity\"].describe())\n",
    "print(im_a_god['popularity'].describe())\n",
    "print(hindi['popularity'].describe())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x11b387390>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x1080 with 11 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = plt.figure(figsize = (15,15))\n",
    "\n",
    "# Acousticness Distribution\n",
    "ax1 = fig.add_subplot(3,4,1)\n",
    "ax1.set_xlabel(\"Acousticness\")\n",
    "ax1.set_ylabel(\"Count\")\n",
    "ax1.set_title(\"Acousticness Distribution\")\n",
    "peak_trap['acousticness'].hist(alpha = .7, label = \"Peak Trap\")\n",
    "im_a_god['acousticness'].hist(alpha = .7, label = \"I'm a God\")\n",
    "frictionless['acousticness'].hist(alpha = .7, label = \"Frictionless\")\n",
    "hindi['acousticness'].hist(alpha = .7, label = \"Hindi\")\n",
    "ax1.legend()\n",
    "# Danceability Distribution\n",
    "ax2 = fig.add_subplot(3,4,2)\n",
    "ax2.set_xlabel(\"Danceability\")\n",
    "ax2.set_ylabel(\"Count\")\n",
    "ax2.set_title(\"Danceability Distribution\")\n",
    "peak_trap['danceability'].hist(alpha = .7, label = \"Peak Trap\")\n",
    "im_a_god['danceability'].hist(alpha = .7, label = \"I'm a God\")\n",
    "frictionless['danceability'].hist(alpha = .7, label = \"Frictionless\")\n",
    "hindi['danceability'].hist(alpha = .7, label = \"Hindi\")\n",
    "ax2.legend()\n",
    "# Duration Distribution\n",
    "ax3 = fig.add_subplot(3,4,3)\n",
    "ax3.set_xlabel(\"Duration (ms)\")\n",
    "ax3.set_ylabel(\"Count\")\n",
    "ax3.set_title(\"Duration Distribution\")\n",
    "peak_trap['duration_ms'].hist(alpha = .7, label = \"Peak Trap\")\n",
    "im_a_god['duration_ms'].hist(alpha = .7, label = \"I'm a God\")\n",
    "frictionless['duration_ms'].hist(alpha = .7, label = \"Frictionless\")\n",
    "hindi['duration_ms'].hist(alpha = .7, label = \"Hindi\")\n",
    "ax3.legend()\n",
    "# Energy Distribution\n",
    "ax4 = fig.add_subplot(3,4,4)\n",
    "ax4.set_xlabel(\"Energy\")\n",
    "ax4.set_ylabel(\"Count\")\n",
    "ax4.set_title(\"Energy Distribution\")\n",
    "peak_trap['energy'].hist(alpha = .7, label = \"Peak Trap\")\n",
    "im_a_god['energy'].hist(alpha = .7, label = \"I'm a God\")\n",
    "frictionless['energy'].hist(alpha = .7, label = \"Frictionless\")\n",
    "hindi['energy'].hist(alpha = .7, label = \"Hindi\")\n",
    "ax4.legend()\n",
    "# Instrumentalness Distribution\n",
    "ax5 = fig.add_subplot(3,4,5)\n",
    "ax5.set_xlabel(\"Instrumentalness\")\n",
    "ax5.set_ylabel(\"Count\")\n",
    "ax5.set_title(\"Instrumentalness Distribution\")\n",
    "peak_trap['instrumentalness'].hist(alpha = .7, label = \"Peak Trap\")\n",
    "im_a_god['instrumentalness'].hist(alpha = .7, label = \"I'm a God\")\n",
    "frictionless['instrumentalness'].hist(alpha = .7, label = \"Frictionless\")\n",
    "hindi['instrumentalness'].hist(alpha = .7, label = \"Hindi\")\n",
    "ax5.legend()\n",
    "# Liveness Distribution\n",
    "ax6 = fig.add_subplot(3,4,6)\n",
    "ax6.set_xlabel(\"Liveness\")\n",
    "ax6.set_ylabel(\"Count\")\n",
    "ax6.set_title(\"Liveness Distribution\")\n",
    "peak_trap['liveness'].hist(alpha = .7, label = \"Peak Trap\")\n",
    "im_a_god['liveness'].hist(alpha = .7, label = \"I'm a God\")\n",
    "frictionless['liveness'].hist(alpha = .7, label = \"Frictionless\")\n",
    "hindi['liveness'].hist(alpha = .7, label = \"Hindi\")\n",
    "ax6.legend()\n",
    "# Loudness Distribution\n",
    "ax7 = fig.add_subplot(3,4,7)\n",
    "ax7.set_xlabel(\"Loudness\")\n",
    "ax7.set_ylabel(\"Count\")\n",
    "ax7.set_title(\"Loudness Distribution\")\n",
    "peak_trap['loudness'].hist(alpha = .7, label = \"Peak Trap\")\n",
    "im_a_god['loudness'].hist(alpha = .7, label = \"I'm a God\")\n",
    "frictionless['loudness'].hist(alpha = .7, label = \"Frictionless\")\n",
    "hindi['loudness'].hist(alpha = .7, label = \"Hindi\")\n",
    "ax7.legend()\n",
    "# Speechiness Distribution\n",
    "ax8 = fig.add_subplot(3,4,8)\n",
    "ax8.set_xlabel(\"Speechiness\")\n",
    "ax8.set_ylabel(\"Count\")\n",
    "ax8.set_title(\"Speechiness Distribution\")\n",
    "peak_trap['speechiness'].hist(alpha = .7, label = \"Peak Trap\")\n",
    "im_a_god['speechiness'].hist(alpha = .7, label = \"I'm a God\")\n",
    "frictionless['speechiness'].hist(alpha = .7, label = \"Frictionless\")\n",
    "hindi['speechiness'].hist(alpha = .7, label = \"Hindi\")\n",
    "ax8.legend()\n",
    "# Valence Distribution\n",
    "ax9 = fig.add_subplot(3,4,9)\n",
    "ax9.set_xlabel(\"Valence\")\n",
    "ax9.set_ylabel(\"Count\")\n",
    "ax9.set_title(\"Valence Distribution\")\n",
    "peak_trap['valence'].hist(alpha = .7, label = \"Peak Trap\")\n",
    "im_a_god['valence'].hist(alpha = .7, label = \"I'm a God\")\n",
    "frictionless['valence'].hist(alpha = .7, label = \"Frictionless\")\n",
    "hindi['valence'].hist(alpha = .7, label = \"Hindi\")\n",
    "ax9.legend()\n",
    "# Tempo Distribution\n",
    "ax10 = fig.add_subplot(3,4,10)\n",
    "ax10.set_xlabel(\"Tempo\")\n",
    "ax10.set_ylabel(\"Count\")\n",
    "ax10.set_title(\"Tempo Distribution\")\n",
    "peak_trap['tempo'].hist(alpha = .7, label = \"Peak Trap\")\n",
    "im_a_god['tempo'].hist(alpha = .7, label = \"I'm a God\")\n",
    "frictionless['tempo'].hist(alpha = .7, label = \"Frictionless\")\n",
    "hindi['tempo'].hist(alpha = .7, label = \"Hindi\")\n",
    "ax10.legend()\n",
    "# Popularity Distribution\n",
    "ax11 = fig.add_subplot(3,4,11)\n",
    "ax11.set_xlabel(\"Popularity\")\n",
    "ax11.set_ylabel(\"Count\")\n",
    "ax11.set_title(\"Popularity Distribution\")\n",
    "peak_trap['popularity'].hist(alpha = .7, label = \"Peak Trap\", bins = 5)\n",
    "im_a_god['popularity'].hist(alpha = .7, label = \"I'm a God\", bins = 5)\n",
    "frictionless['popularity'].hist(alpha = .7, label = \"Frictionless\", bins = 5)\n",
    "hindi['popularity'].hist(alpha = .7, label = \"Hindi\")\n",
    "ax11.legend()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>acousticness</th>\n",
       "      <th>danceability</th>\n",
       "      <th>energy</th>\n",
       "      <th>loudness</th>\n",
       "      <th>speechiness</th>\n",
       "      <th>popularity</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4LwrgltRSrddxeyhIPSoqa</th>\n",
       "      <td>0.301000</td>\n",
       "      <td>0.667</td>\n",
       "      <td>0.740</td>\n",
       "      <td>-6.406</td>\n",
       "      <td>0.0314</td>\n",
       "      <td>51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3K01q0jtSNHeqx5gs97HH2</th>\n",
       "      <td>0.011200</td>\n",
       "      <td>0.814</td>\n",
       "      <td>0.900</td>\n",
       "      <td>-3.318</td>\n",
       "      <td>0.0605</td>\n",
       "      <td>48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7e8gFGk8VXcc8BmkaN58l4</th>\n",
       "      <td>0.007310</td>\n",
       "      <td>0.711</td>\n",
       "      <td>0.861</td>\n",
       "      <td>-4.863</td>\n",
       "      <td>0.1060</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0oo5zVjH4CyTsm5FctRlnL</th>\n",
       "      <td>0.094000</td>\n",
       "      <td>0.628</td>\n",
       "      <td>0.873</td>\n",
       "      <td>-5.690</td>\n",
       "      <td>0.0355</td>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5U4wYRHrCRxRP6iQfM824C</th>\n",
       "      <td>0.075200</td>\n",
       "      <td>0.795</td>\n",
       "      <td>0.784</td>\n",
       "      <td>-5.933</td>\n",
       "      <td>0.0983</td>\n",
       "      <td>47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4Cd01GWLuMTNZhW0DE7cF4</th>\n",
       "      <td>0.164000</td>\n",
       "      <td>0.714</td>\n",
       "      <td>0.946</td>\n",
       "      <td>-3.540</td>\n",
       "      <td>0.0890</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5lEsM6qpuzuZwij6jIZPvP</th>\n",
       "      <td>0.027300</td>\n",
       "      <td>0.599</td>\n",
       "      <td>0.888</td>\n",
       "      <td>-2.931</td>\n",
       "      <td>0.0514</td>\n",
       "      <td>54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10xcIQQEJSEIOgG1HvS3t9</th>\n",
       "      <td>0.005770</td>\n",
       "      <td>0.614</td>\n",
       "      <td>0.919</td>\n",
       "      <td>-3.011</td>\n",
       "      <td>0.0413</td>\n",
       "      <td>49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1GBknQ67DCfKTPms1dw9EW</th>\n",
       "      <td>0.070300</td>\n",
       "      <td>0.593</td>\n",
       "      <td>0.970</td>\n",
       "      <td>-4.187</td>\n",
       "      <td>0.0716</td>\n",
       "      <td>57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5Plb8xps8VZRF2sXlrPi3Q</th>\n",
       "      <td>0.017300</td>\n",
       "      <td>0.734</td>\n",
       "      <td>0.698</td>\n",
       "      <td>-3.923</td>\n",
       "      <td>0.1430</td>\n",
       "      <td>41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1rS3J4u1G8f6hbmTosa8Nf</th>\n",
       "      <td>0.005600</td>\n",
       "      <td>0.531</td>\n",
       "      <td>0.766</td>\n",
       "      <td>-7.692</td>\n",
       "      <td>0.0582</td>\n",
       "      <td>51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6p6TjiJHc1kJQt5dXzkdrs</th>\n",
       "      <td>0.003370</td>\n",
       "      <td>0.587</td>\n",
       "      <td>0.882</td>\n",
       "      <td>-5.010</td>\n",
       "      <td>0.3080</td>\n",
       "      <td>55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0pVckwSpyc30WvDUffQLk3</th>\n",
       "      <td>0.128000</td>\n",
       "      <td>0.668</td>\n",
       "      <td>0.964</td>\n",
       "      <td>-4.335</td>\n",
       "      <td>0.0806</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2kM7fxFNAtA7lo4nAS2Hvj</th>\n",
       "      <td>0.189000</td>\n",
       "      <td>0.815</td>\n",
       "      <td>0.824</td>\n",
       "      <td>-4.511</td>\n",
       "      <td>0.2510</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3waY7uu8cniaQw5Auf0MOp</th>\n",
       "      <td>0.101000</td>\n",
       "      <td>0.532</td>\n",
       "      <td>0.939</td>\n",
       "      <td>-3.140</td>\n",
       "      <td>0.0637</td>\n",
       "      <td>48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5Q0Nhxo0l2bP3pNjpGJwV1</th>\n",
       "      <td>0.001240</td>\n",
       "      <td>0.454</td>\n",
       "      <td>0.708</td>\n",
       "      <td>-4.526</td>\n",
       "      <td>0.0675</td>\n",
       "      <td>72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3JG2VnwaVmVLf8BUGw7QlK</th>\n",
       "      <td>0.007300</td>\n",
       "      <td>0.363</td>\n",
       "      <td>0.897</td>\n",
       "      <td>-4.069</td>\n",
       "      <td>0.0666</td>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76Wrq73y3Ef7VNM4CGSZ0l</th>\n",
       "      <td>0.080300</td>\n",
       "      <td>0.814</td>\n",
       "      <td>0.884</td>\n",
       "      <td>-5.238</td>\n",
       "      <td>0.1120</td>\n",
       "      <td>41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0gG4SZ5weal3dd11pf5SzV</th>\n",
       "      <td>0.222000</td>\n",
       "      <td>0.664</td>\n",
       "      <td>0.899</td>\n",
       "      <td>-3.848</td>\n",
       "      <td>0.2650</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6oYkwjI1TKP9D0Y9II1GT7</th>\n",
       "      <td>0.702000</td>\n",
       "      <td>0.443</td>\n",
       "      <td>0.472</td>\n",
       "      <td>-14.567</td>\n",
       "      <td>0.2580</td>\n",
       "      <td>65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0gdLTqxAY4DDUQxXzmwj1z</th>\n",
       "      <td>0.915000</td>\n",
       "      <td>0.749</td>\n",
       "      <td>0.429</td>\n",
       "      <td>-8.908</td>\n",
       "      <td>0.3210</td>\n",
       "      <td>47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41vXrvl9HIfUpijbIgi5R6</th>\n",
       "      <td>0.090900</td>\n",
       "      <td>0.740</td>\n",
       "      <td>0.803</td>\n",
       "      <td>-3.797</td>\n",
       "      <td>0.2100</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2wwtLxWeiSWEbmpX9o40IN</th>\n",
       "      <td>0.033100</td>\n",
       "      <td>0.919</td>\n",
       "      <td>0.839</td>\n",
       "      <td>-6.402</td>\n",
       "      <td>0.1590</td>\n",
       "      <td>37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3LHMFgMolEbhhGBC47OuAi</th>\n",
       "      <td>0.644000</td>\n",
       "      <td>0.560</td>\n",
       "      <td>0.538</td>\n",
       "      <td>-7.326</td>\n",
       "      <td>0.2550</td>\n",
       "      <td>49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3xZek9XkEaX130o3XN9cvd</th>\n",
       "      <td>0.000013</td>\n",
       "      <td>0.527</td>\n",
       "      <td>0.868</td>\n",
       "      <td>-6.136</td>\n",
       "      <td>0.0287</td>\n",
       "      <td>50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0UREO3QWbXJW3gOUXpK1am</th>\n",
       "      <td>0.002780</td>\n",
       "      <td>0.824</td>\n",
       "      <td>0.684</td>\n",
       "      <td>-7.354</td>\n",
       "      <td>0.0935</td>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1xbCQn1F1tbAElP2GoJ8pr</th>\n",
       "      <td>0.215000</td>\n",
       "      <td>0.537</td>\n",
       "      <td>0.701</td>\n",
       "      <td>-3.168</td>\n",
       "      <td>0.0490</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6xG2ZGudUgtV235xvDlSEt</th>\n",
       "      <td>0.122000</td>\n",
       "      <td>0.538</td>\n",
       "      <td>0.907</td>\n",
       "      <td>-3.743</td>\n",
       "      <td>0.0494</td>\n",
       "      <td>58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2lExwdmloBIB6Y07WSHW5g</th>\n",
       "      <td>0.497000</td>\n",
       "      <td>0.878</td>\n",
       "      <td>0.561</td>\n",
       "      <td>-9.660</td>\n",
       "      <td>0.0486</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6L33GgWMpd53M1vldLstrW</th>\n",
       "      <td>0.155000</td>\n",
       "      <td>0.730</td>\n",
       "      <td>0.671</td>\n",
       "      <td>-10.100</td>\n",
       "      <td>0.0376</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79ji61eEDBXXcpR0DBjcRP</th>\n",
       "      <td>0.008140</td>\n",
       "      <td>0.712</td>\n",
       "      <td>0.847</td>\n",
       "      <td>-3.088</td>\n",
       "      <td>0.1470</td>\n",
       "      <td>54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6fwdbPMwP1zVStm8FybmkO</th>\n",
       "      <td>0.373000</td>\n",
       "      <td>0.835</td>\n",
       "      <td>0.413</td>\n",
       "      <td>-9.810</td>\n",
       "      <td>0.3960</td>\n",
       "      <td>75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1rsAFUCa6BVMgRQ3FCQQsi</th>\n",
       "      <td>0.030400</td>\n",
       "      <td>0.803</td>\n",
       "      <td>0.789</td>\n",
       "      <td>-3.434</td>\n",
       "      <td>0.0383</td>\n",
       "      <td>73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39hnH8WdPmNT3Q3yzwC9Rg</th>\n",
       "      <td>0.039200</td>\n",
       "      <td>0.926</td>\n",
       "      <td>0.336</td>\n",
       "      <td>-9.326</td>\n",
       "      <td>0.5940</td>\n",
       "      <td>65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2eAZfqOm4EnOF9VvN50Tyc</th>\n",
       "      <td>0.617000</td>\n",
       "      <td>0.703</td>\n",
       "      <td>0.757</td>\n",
       "      <td>-3.612</td>\n",
       "      <td>0.0500</td>\n",
       "      <td>78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5uDASfU19gDxSjW8cnCaBp</th>\n",
       "      <td>0.031200</td>\n",
       "      <td>0.886</td>\n",
       "      <td>0.427</td>\n",
       "      <td>-10.028</td>\n",
       "      <td>0.1450</td>\n",
       "      <td>78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6IgtGf4ZmG3OPLmE1PFXrr</th>\n",
       "      <td>0.242000</td>\n",
       "      <td>0.878</td>\n",
       "      <td>0.233</td>\n",
       "      <td>-11.311</td>\n",
       "      <td>0.6030</td>\n",
       "      <td>57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3B54sVLJ402zGa6Xm4YGNe</th>\n",
       "      <td>0.029300</td>\n",
       "      <td>0.726</td>\n",
       "      <td>0.769</td>\n",
       "      <td>-5.043</td>\n",
       "      <td>0.1230</td>\n",
       "      <td>84</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1eQIZQTJ3CQOYJPY7EOUKp</th>\n",
       "      <td>0.653000</td>\n",
       "      <td>0.739</td>\n",
       "      <td>0.553</td>\n",
       "      <td>-9.129</td>\n",
       "      <td>0.2450</td>\n",
       "      <td>59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0z5ZPs57J2KERwM1tBM2GF</th>\n",
       "      <td>0.000707</td>\n",
       "      <td>0.365</td>\n",
       "      <td>0.751</td>\n",
       "      <td>-5.429</td>\n",
       "      <td>0.3040</td>\n",
       "      <td>69</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19gEmPjfqSZT0ulDRfjl0m</th>\n",
       "      <td>0.050500</td>\n",
       "      <td>0.794</td>\n",
       "      <td>0.510</td>\n",
       "      <td>-7.314</td>\n",
       "      <td>0.4200</td>\n",
       "      <td>72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2DgMxFMUQRPthW4ROhjen1</th>\n",
       "      <td>0.543000</td>\n",
       "      <td>0.718</td>\n",
       "      <td>0.628</td>\n",
       "      <td>-6.007</td>\n",
       "      <td>0.2230</td>\n",
       "      <td>71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5hTpBe8h35rJ67eAWHQsJx</th>\n",
       "      <td>0.170000</td>\n",
       "      <td>0.941</td>\n",
       "      <td>0.335</td>\n",
       "      <td>-10.179</td>\n",
       "      <td>0.5050</td>\n",
       "      <td>75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6C7RJEIUDqKkJRZVWdkfkH</th>\n",
       "      <td>0.007280</td>\n",
       "      <td>0.625</td>\n",
       "      <td>0.726</td>\n",
       "      <td>-7.731</td>\n",
       "      <td>0.1550</td>\n",
       "      <td>73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4zGvb8hxGLB2jEPRFiRRqw</th>\n",
       "      <td>0.062700</td>\n",
       "      <td>0.508</td>\n",
       "      <td>0.763</td>\n",
       "      <td>-5.674</td>\n",
       "      <td>0.3030</td>\n",
       "      <td>69</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49ySwzAyvxcNXOkOP6ZB1L</th>\n",
       "      <td>0.000146</td>\n",
       "      <td>0.774</td>\n",
       "      <td>0.431</td>\n",
       "      <td>-8.407</td>\n",
       "      <td>0.3460</td>\n",
       "      <td>49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6tUgfsOa8PLkoede5nOR7D</th>\n",
       "      <td>0.001940</td>\n",
       "      <td>0.919</td>\n",
       "      <td>0.730</td>\n",
       "      <td>-6.581</td>\n",
       "      <td>0.0880</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5sqHFfmw7MMc1L85BN8802</th>\n",
       "      <td>0.122000</td>\n",
       "      <td>0.895</td>\n",
       "      <td>0.536</td>\n",
       "      <td>-8.588</td>\n",
       "      <td>0.3290</td>\n",
       "      <td>56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0zO8ctW0UiuOefR87OeJOZ</th>\n",
       "      <td>0.025000</td>\n",
       "      <td>0.825</td>\n",
       "      <td>0.575</td>\n",
       "      <td>-4.870</td>\n",
       "      <td>0.0633</td>\n",
       "      <td>72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2UzQdfooGVIeGjqcUMOBWY</th>\n",
       "      <td>0.522000</td>\n",
       "      <td>0.745</td>\n",
       "      <td>0.669</td>\n",
       "      <td>-3.613</td>\n",
       "      <td>0.1290</td>\n",
       "      <td>57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2gZUPNdnz5Y45eiGxpHGSc</th>\n",
       "      <td>0.016200</td>\n",
       "      <td>0.543</td>\n",
       "      <td>0.915</td>\n",
       "      <td>-4.746</td>\n",
       "      <td>0.1130</td>\n",
       "      <td>75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3vtoVqw8chHlWJLkLROfgV</th>\n",
       "      <td>0.160000</td>\n",
       "      <td>0.828</td>\n",
       "      <td>0.301</td>\n",
       "      <td>-12.374</td>\n",
       "      <td>0.2460</td>\n",
       "      <td>54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5kmOA4GG5o3lg7kaFPDfc8</th>\n",
       "      <td>0.159000</td>\n",
       "      <td>0.939</td>\n",
       "      <td>0.659</td>\n",
       "      <td>-6.124</td>\n",
       "      <td>0.2490</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6HSqyfGnsHYw9MmIpa9zlZ</th>\n",
       "      <td>0.244000</td>\n",
       "      <td>0.544</td>\n",
       "      <td>0.920</td>\n",
       "      <td>-1.474</td>\n",
       "      <td>0.2770</td>\n",
       "      <td>66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1ZHYJ2Wwgxes4m8Ba88PeK</th>\n",
       "      <td>0.002440</td>\n",
       "      <td>0.628</td>\n",
       "      <td>0.692</td>\n",
       "      <td>-5.640</td>\n",
       "      <td>0.2020</td>\n",
       "      <td>68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6l2Q1Jb5c2VycqDEzp5ZlJ</th>\n",
       "      <td>0.260000</td>\n",
       "      <td>0.795</td>\n",
       "      <td>0.880</td>\n",
       "      <td>-4.694</td>\n",
       "      <td>0.2280</td>\n",
       "      <td>43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4HFsQRxQLEPleq9UmIzke4</th>\n",
       "      <td>0.162000</td>\n",
       "      <td>0.520</td>\n",
       "      <td>0.762</td>\n",
       "      <td>-6.603</td>\n",
       "      <td>0.3380</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>722tgOgdIbNe3BEyLnejw4</th>\n",
       "      <td>0.000954</td>\n",
       "      <td>0.775</td>\n",
       "      <td>0.823</td>\n",
       "      <td>-6.091</td>\n",
       "      <td>0.2710</td>\n",
       "      <td>73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4cAgkb0ifwn0FSHGXnr4F6</th>\n",
       "      <td>0.141000</td>\n",
       "      <td>0.500</td>\n",
       "      <td>0.593</td>\n",
       "      <td>-4.340</td>\n",
       "      <td>0.0898</td>\n",
       "      <td>61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22VdIZQfgXJea34mQxlt81</th>\n",
       "      <td>0.112000</td>\n",
       "      <td>0.705</td>\n",
       "      <td>0.769</td>\n",
       "      <td>-5.526</td>\n",
       "      <td>0.0426</td>\n",
       "      <td>78</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>224 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                        acousticness  danceability  energy  loudness  \\\n",
       "id                                                                     \n",
       "4LwrgltRSrddxeyhIPSoqa      0.301000         0.667   0.740    -6.406   \n",
       "3K01q0jtSNHeqx5gs97HH2      0.011200         0.814   0.900    -3.318   \n",
       "7e8gFGk8VXcc8BmkaN58l4      0.007310         0.711   0.861    -4.863   \n",
       "0oo5zVjH4CyTsm5FctRlnL      0.094000         0.628   0.873    -5.690   \n",
       "5U4wYRHrCRxRP6iQfM824C      0.075200         0.795   0.784    -5.933   \n",
       "4Cd01GWLuMTNZhW0DE7cF4      0.164000         0.714   0.946    -3.540   \n",
       "5lEsM6qpuzuZwij6jIZPvP      0.027300         0.599   0.888    -2.931   \n",
       "10xcIQQEJSEIOgG1HvS3t9      0.005770         0.614   0.919    -3.011   \n",
       "1GBknQ67DCfKTPms1dw9EW      0.070300         0.593   0.970    -4.187   \n",
       "5Plb8xps8VZRF2sXlrPi3Q      0.017300         0.734   0.698    -3.923   \n",
       "1rS3J4u1G8f6hbmTosa8Nf      0.005600         0.531   0.766    -7.692   \n",
       "6p6TjiJHc1kJQt5dXzkdrs      0.003370         0.587   0.882    -5.010   \n",
       "0pVckwSpyc30WvDUffQLk3      0.128000         0.668   0.964    -4.335   \n",
       "2kM7fxFNAtA7lo4nAS2Hvj      0.189000         0.815   0.824    -4.511   \n",
       "3waY7uu8cniaQw5Auf0MOp      0.101000         0.532   0.939    -3.140   \n",
       "5Q0Nhxo0l2bP3pNjpGJwV1      0.001240         0.454   0.708    -4.526   \n",
       "3JG2VnwaVmVLf8BUGw7QlK      0.007300         0.363   0.897    -4.069   \n",
       "76Wrq73y3Ef7VNM4CGSZ0l      0.080300         0.814   0.884    -5.238   \n",
       "0gG4SZ5weal3dd11pf5SzV      0.222000         0.664   0.899    -3.848   \n",
       "6oYkwjI1TKP9D0Y9II1GT7      0.702000         0.443   0.472   -14.567   \n",
       "0gdLTqxAY4DDUQxXzmwj1z      0.915000         0.749   0.429    -8.908   \n",
       "41vXrvl9HIfUpijbIgi5R6      0.090900         0.740   0.803    -3.797   \n",
       "2wwtLxWeiSWEbmpX9o40IN      0.033100         0.919   0.839    -6.402   \n",
       "3LHMFgMolEbhhGBC47OuAi      0.644000         0.560   0.538    -7.326   \n",
       "3xZek9XkEaX130o3XN9cvd      0.000013         0.527   0.868    -6.136   \n",
       "0UREO3QWbXJW3gOUXpK1am      0.002780         0.824   0.684    -7.354   \n",
       "1xbCQn1F1tbAElP2GoJ8pr      0.215000         0.537   0.701    -3.168   \n",
       "6xG2ZGudUgtV235xvDlSEt      0.122000         0.538   0.907    -3.743   \n",
       "2lExwdmloBIB6Y07WSHW5g      0.497000         0.878   0.561    -9.660   \n",
       "6L33GgWMpd53M1vldLstrW      0.155000         0.730   0.671   -10.100   \n",
       "...                              ...           ...     ...       ...   \n",
       "79ji61eEDBXXcpR0DBjcRP      0.008140         0.712   0.847    -3.088   \n",
       "6fwdbPMwP1zVStm8FybmkO      0.373000         0.835   0.413    -9.810   \n",
       "1rsAFUCa6BVMgRQ3FCQQsi      0.030400         0.803   0.789    -3.434   \n",
       "39hnH8WdPmNT3Q3yzwC9Rg      0.039200         0.926   0.336    -9.326   \n",
       "2eAZfqOm4EnOF9VvN50Tyc      0.617000         0.703   0.757    -3.612   \n",
       "5uDASfU19gDxSjW8cnCaBp      0.031200         0.886   0.427   -10.028   \n",
       "6IgtGf4ZmG3OPLmE1PFXrr      0.242000         0.878   0.233   -11.311   \n",
       "3B54sVLJ402zGa6Xm4YGNe      0.029300         0.726   0.769    -5.043   \n",
       "1eQIZQTJ3CQOYJPY7EOUKp      0.653000         0.739   0.553    -9.129   \n",
       "0z5ZPs57J2KERwM1tBM2GF      0.000707         0.365   0.751    -5.429   \n",
       "19gEmPjfqSZT0ulDRfjl0m      0.050500         0.794   0.510    -7.314   \n",
       "2DgMxFMUQRPthW4ROhjen1      0.543000         0.718   0.628    -6.007   \n",
       "5hTpBe8h35rJ67eAWHQsJx      0.170000         0.941   0.335   -10.179   \n",
       "6C7RJEIUDqKkJRZVWdkfkH      0.007280         0.625   0.726    -7.731   \n",
       "4zGvb8hxGLB2jEPRFiRRqw      0.062700         0.508   0.763    -5.674   \n",
       "49ySwzAyvxcNXOkOP6ZB1L      0.000146         0.774   0.431    -8.407   \n",
       "6tUgfsOa8PLkoede5nOR7D      0.001940         0.919   0.730    -6.581   \n",
       "5sqHFfmw7MMc1L85BN8802      0.122000         0.895   0.536    -8.588   \n",
       "0zO8ctW0UiuOefR87OeJOZ      0.025000         0.825   0.575    -4.870   \n",
       "2UzQdfooGVIeGjqcUMOBWY      0.522000         0.745   0.669    -3.613   \n",
       "2gZUPNdnz5Y45eiGxpHGSc      0.016200         0.543   0.915    -4.746   \n",
       "3vtoVqw8chHlWJLkLROfgV      0.160000         0.828   0.301   -12.374   \n",
       "5kmOA4GG5o3lg7kaFPDfc8      0.159000         0.939   0.659    -6.124   \n",
       "6HSqyfGnsHYw9MmIpa9zlZ      0.244000         0.544   0.920    -1.474   \n",
       "1ZHYJ2Wwgxes4m8Ba88PeK      0.002440         0.628   0.692    -5.640   \n",
       "6l2Q1Jb5c2VycqDEzp5ZlJ      0.260000         0.795   0.880    -4.694   \n",
       "4HFsQRxQLEPleq9UmIzke4      0.162000         0.520   0.762    -6.603   \n",
       "722tgOgdIbNe3BEyLnejw4      0.000954         0.775   0.823    -6.091   \n",
       "4cAgkb0ifwn0FSHGXnr4F6      0.141000         0.500   0.593    -4.340   \n",
       "22VdIZQfgXJea34mQxlt81      0.112000         0.705   0.769    -5.526   \n",
       "\n",
       "                        speechiness  popularity  \n",
       "id                                               \n",
       "4LwrgltRSrddxeyhIPSoqa       0.0314          51  \n",
       "3K01q0jtSNHeqx5gs97HH2       0.0605          48  \n",
       "7e8gFGk8VXcc8BmkaN58l4       0.1060          32  \n",
       "0oo5zVjH4CyTsm5FctRlnL       0.0355          34  \n",
       "5U4wYRHrCRxRP6iQfM824C       0.0983          47  \n",
       "4Cd01GWLuMTNZhW0DE7cF4       0.0890          45  \n",
       "5lEsM6qpuzuZwij6jIZPvP       0.0514          54  \n",
       "10xcIQQEJSEIOgG1HvS3t9       0.0413          49  \n",
       "1GBknQ67DCfKTPms1dw9EW       0.0716          57  \n",
       "5Plb8xps8VZRF2sXlrPi3Q       0.1430          41  \n",
       "1rS3J4u1G8f6hbmTosa8Nf       0.0582          51  \n",
       "6p6TjiJHc1kJQt5dXzkdrs       0.3080          55  \n",
       "0pVckwSpyc30WvDUffQLk3       0.0806          28  \n",
       "2kM7fxFNAtA7lo4nAS2Hvj       0.2510          42  \n",
       "3waY7uu8cniaQw5Auf0MOp       0.0637          48  \n",
       "5Q0Nhxo0l2bP3pNjpGJwV1       0.0675          72  \n",
       "3JG2VnwaVmVLf8BUGw7QlK       0.0666          39  \n",
       "76Wrq73y3Ef7VNM4CGSZ0l       0.1120          41  \n",
       "0gG4SZ5weal3dd11pf5SzV       0.2650          40  \n",
       "6oYkwjI1TKP9D0Y9II1GT7       0.2580          65  \n",
       "0gdLTqxAY4DDUQxXzmwj1z       0.3210          47  \n",
       "41vXrvl9HIfUpijbIgi5R6       0.2100          40  \n",
       "2wwtLxWeiSWEbmpX9o40IN       0.1590          37  \n",
       "3LHMFgMolEbhhGBC47OuAi       0.2550          49  \n",
       "3xZek9XkEaX130o3XN9cvd       0.0287          50  \n",
       "0UREO3QWbXJW3gOUXpK1am       0.0935          63  \n",
       "1xbCQn1F1tbAElP2GoJ8pr       0.0490          20  \n",
       "6xG2ZGudUgtV235xvDlSEt       0.0494          58  \n",
       "2lExwdmloBIB6Y07WSHW5g       0.0486          32  \n",
       "6L33GgWMpd53M1vldLstrW       0.0376          40  \n",
       "...                             ...         ...  \n",
       "79ji61eEDBXXcpR0DBjcRP       0.1470          54  \n",
       "6fwdbPMwP1zVStm8FybmkO       0.3960          75  \n",
       "1rsAFUCa6BVMgRQ3FCQQsi       0.0383          73  \n",
       "39hnH8WdPmNT3Q3yzwC9Rg       0.5940          65  \n",
       "2eAZfqOm4EnOF9VvN50Tyc       0.0500          78  \n",
       "5uDASfU19gDxSjW8cnCaBp       0.1450          78  \n",
       "6IgtGf4ZmG3OPLmE1PFXrr       0.6030          57  \n",
       "3B54sVLJ402zGa6Xm4YGNe       0.1230          84  \n",
       "1eQIZQTJ3CQOYJPY7EOUKp       0.2450          59  \n",
       "0z5ZPs57J2KERwM1tBM2GF       0.3040          69  \n",
       "19gEmPjfqSZT0ulDRfjl0m       0.4200          72  \n",
       "2DgMxFMUQRPthW4ROhjen1       0.2230          71  \n",
       "5hTpBe8h35rJ67eAWHQsJx       0.5050          75  \n",
       "6C7RJEIUDqKkJRZVWdkfkH       0.1550          73  \n",
       "4zGvb8hxGLB2jEPRFiRRqw       0.3030          69  \n",
       "49ySwzAyvxcNXOkOP6ZB1L       0.3460          49  \n",
       "6tUgfsOa8PLkoede5nOR7D       0.0880          19  \n",
       "5sqHFfmw7MMc1L85BN8802       0.3290          56  \n",
       "0zO8ctW0UiuOefR87OeJOZ       0.0633          72  \n",
       "2UzQdfooGVIeGjqcUMOBWY       0.1290          57  \n",
       "2gZUPNdnz5Y45eiGxpHGSc       0.1130          75  \n",
       "3vtoVqw8chHlWJLkLROfgV       0.2460          54  \n",
       "5kmOA4GG5o3lg7kaFPDfc8       0.2490          12  \n",
       "6HSqyfGnsHYw9MmIpa9zlZ       0.2770          66  \n",
       "1ZHYJ2Wwgxes4m8Ba88PeK       0.2020          68  \n",
       "6l2Q1Jb5c2VycqDEzp5ZlJ       0.2280          43  \n",
       "4HFsQRxQLEPleq9UmIzke4       0.3380          40  \n",
       "722tgOgdIbNe3BEyLnejw4       0.2710          73  \n",
       "4cAgkb0ifwn0FSHGXnr4F6       0.0898          61  \n",
       "22VdIZQfgXJea34mQxlt81       0.0426          78  \n",
       "\n",
       "[224 rows x 6 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "main_tracks = all_tracks[all_tracks[\"playlist\"] != \"Hindi\"]\n",
    "features = main_tracks.drop([\"playlist\",\"duration_ms\",\"instrumentalness\",\"valence\",\"liveness\",\"key\",\"time_signature\",\"mode\",\"tempo\",\"artist\"],1)\n",
    "labels = main_tracks[\"playlist\"]\n",
    "features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "PCA(copy=True, iterated_power='auto', n_components=2, random_state=None,\n",
       "  svd_solver='auto', tol=0.0, whiten=False)"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.decomposition import PCA\n",
    "pca = PCA(n_components = 2)\n",
    "pca.fit(features)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "features_train, features_test, labels_train, labels_test = train_test_split(features, labels, test_size = .15, random_state = 0)\n",
    "features_train_pca = pca.transform(features_train)\n",
    "features_test_pca = pca.transform(features_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "clf = KNeighborsClassifier(n_neighbors = 10, weights = 'distance')\n",
    "clf.fit(features_train_pca,labels_train)\n",
    "pred = clf.predict(features_test_pca)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.6519607843137255\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import f1_score\n",
    "print(f1_score(labels_test, pred, average = 'weighted'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "clf = RandomForestClassifier(n_estimators = 30, min_samples_split = 5, min_samples_leaf = 5)\n",
    "clf.fit(features_train_pca, labels_train)\n",
    "pred = clf.predict(features_test_pca)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.5641025641025641\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import f1_score\n",
    "print(f1_score(labels_test, pred, average = 'weighted'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "all_t"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
